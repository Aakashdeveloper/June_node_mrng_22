////Setup db local/////
> Download & Install
(https://www.mongodb.com/try/download/community)
> Install mongodb Compass
(https://www.mongodb.com/try/download/compass)

/////Window/////
> inside C drive make folder data   > C:\data
> inside data make folder db  > C:\data\db

////How to start mongo server////
> open cmd
> go inside mongodb bin folder (C:\Program Files\Server\5.2\bin)
> mongod
(this will start mongodb server)

////How to start mongo client////
> open new cmd (dont close the server Cmd)
> go inside mongodb bin folder (C:\Program Files\Server\5.2\bin)
> mongo
(here we will test the query)

////Mac/Linux
> open terminal 
> mkdir data/db

////How to start mongo server////
> open terminal 
> mongod --dbpath data/db

////How to start mongo client////
> open terminal 
> mongo

//////////////////////
SQL       NoSQL

RollNO | Hindi | English |
  1    |   80  |         |
  2    |       |  75     |
  3    |  87   |         |

  [
    {
        rollNo:1,
        Hindi:80,
        computer:78
    },
    {
        rollNo:2,
        English:75
    },
    {
        rollNo:3,
        Hindi:87
    },
  ]


SQL         NoSQL
Database    Database
Table       Collections
row         Document
Select      find
Insert      insert
Delete      remove
update      update


Default Port > 27017

>>>>>>Show All DBs<<<<<<<<
> show dbs

>>>>Go Inside Db
> use databasename

>>>>See Collections
> show collections

>>>>Find all records
> db.collectionName.find()
> db.products.find().pretty() //only for console not code

////Creating Database
use dbname

////insert data
db.collectionName.insert({"name":"Latika"})

////////////////////////////////
_id > object Id
> every record will have _id
> primaryKey & unique with each record

12byte 
5 bytes (Random Number)
3 bytes (Series)
4 byte  (timestamp)

///////////////////////////////////
Find on basis of condition

db.products.find({'product_name':"Women's Jeans"}).pretty()
db.products.find({'product_name':"Women's Jeans",Size:'L'}).pretty()

mongodb+srv://test:test123@cluster0.f8vmc.mongodb.net/?retryWrites=true&w=majority
mongodb://localhost:27017


db.restaurants.find({'restaurant_id':4,'state_id':2}).pretty()

db.restaurants.find({'mealTypes.mealtype_id':4,'state_id':2}).pretty()


db.restaurants.find({condition},{projection}).pretty()

db.restaurants.find({'mealTypes.mealtype_id':4},{restaurant_name:1,_id:0,cost:1,mealTypes:1}).pretty()



db.restaurants.find({cost:{$lt:500}},{restaurant_name:1,_id:0,cost:1}).pretty()

db.restaurants.find({cost:{$gt:1000}},{restaurant_name:1,_id:0,cost:1}).pretty()

db.restaurants.find({cost:{$gt:500,$lt:800}},{restaurant_name:1,_id:0,cost:1}).pretty()

db.restaurants.find({'mealTypes.mealtype_id':{$in:[1,4,5]}},{restaurant_name:1,_id:0,cost:1}).pretty()


//////insert/////
db.collection.insert({name:'abc',city:'Paris'})

db.collection.insert([
  {name:'abc',city:'Paris'},
  {name:'abc',city:'Paris'}
                    ])


//////Update 
db.collectioName.update({condition},{update query})

db.user.update(
  {"name":"Anand"},
  {
    $set:{
      "city":"Delhi",
      "age":24
    }
  },
  {
    upsert:true
  }
)

db.user.update(
  {"name":"Arush"},
  {
    $set:{
      "age":25
    }
  }
)

db.user.update(
  {"name":"Latika"},
  {
    $unset:{
      "age":1
    }
  }
)

/////////Delete///////
db.collection.remove({}) //delete all records

db.collection.remove({condition}) //delete particular records

///////////Aggregation//////
db.products.aggregate([
    {$match:{Color:'Blue'}},
    {$group:{
      _id:'$Brand',
      count:{$sum:1}
    }},
    {$sort:{Price:1}},
  ])


db.products.find({Color:'Blue'},{product_name:1,_id:0,Price:1}).sort({Price:1})

db.products.find({Color:'Blue'},{product_name:1,_id:0,Price:1}).sort({Price:-1}).skip(8).limit(2)